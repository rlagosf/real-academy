{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ContactForm',\n  data() {\n    return {\n      form: {\n        name: '',\n        phone: '',\n        address: '',\n        email: '',\n        source: ''\n      },\n      isLoading: false,\n      // Estado de loading\n      formSuccess: false // Estado para saber si el formulario fue enviado con éxito\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        this.isLoading = true; // Mostrar el componente de loading\n\n        // Convertir los datos del formulario a mayúsculas\n        const upperCaseForm = {\n          name: this.form.name.toUpperCase(),\n          phone: this.form.phone,\n          address: this.form.address.toUpperCase(),\n          email: this.form.email,\n          source: this.form.source.toUpperCase()\n        };\n        const response = await axios.post('http://localhost:3000/api/contact', upperCaseForm);\n\n        // Si el servidor responde con éxito, mostrar el mensaje de éxito\n        if (response.status === 201) {\n          setTimeout(() => {\n            this.isLoading = false; // Ocultar el componente de loading\n            this.formSuccess = true; // Mostrar mensaje de éxito\n            // Redirigir a la página de inicio después de unos segundos\n            setTimeout(() => {\n              window.scrollTo(0, 0);\n              location.reload(); // Recargar la misma página\n            }, 3000); // Esperar 3 segundos para mostrar el mensaje de éxito\n          }, 2000); // Tiempo de simulación del loading\n        } else {\n          alert('Hubo un problema al enviar el formulario, intenta nuevamente.');\n          this.isLoading = false;\n        }\n      } catch (error) {\n        console.error('Error al enviar el formulario:', error);\n        alert('Hubo un error al enviar el formulario. Por favor, revisa los datos e intenta de nuevo.');\n        this.isLoading = false;\n      }\n    },\n    showSuccessMessage() {\n      setTimeout(() => {\n        this.$refs.successMessage.classList.add('visible'); // Agrega la clase visible para animación\n      }, 100); // Espera 100ms antes de añadir la clase visible\n    },\n    validatePhone() {\n      // Asegúrate de que solo se ingresen números y que no exceda 9 dígitos\n      this.form.phone = this.form.phone.replace(/[^0-9]/g, '').slice(0, 9);\n    },\n    validateName() {\n      // Validar que el nombre no contenga solo caracteres repetidos o inapropiados\n      const pattern = /^(?!.*(.)\\1{2,})[a-zA-Z\\s]*$/; // No más de dos caracteres repetidos\n      if (!pattern.test(this.form.name)) {\n        alert('Por favor, ingresa un nombre válido. Evita usar caracteres repetidos o inapropiados.');\n        this.form.name = ''; // Limpia el campo\n      }\n    },\n    resetForm() {\n      // Restablecer el formulario después del éxito\n      this.form.name = '';\n      this.form.phone = '';\n      this.form.address = '';\n      this.form.email = '';\n      this.form.source = '';\n      this.formSuccess = false;\n      this.isLoading = false;\n    }\n  },\n  mounted() {\n    // Obtener todos los elementos de entrada y el botón en la sección de contacto\n    const contactElements = this.$refs.contactSection.querySelectorAll('input, select, button, .success-message');\n\n    // Configuración del IntersectionObserver para activar las animaciones\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('visible'); // Añade clase visible cuando está en pantalla\n        } else {\n          entry.target.classList.remove('visible'); // Elimina clase cuando sale de pantalla\n        }\n      });\n    });\n\n    // Observar cada elemento de entrada y el botón\n    contactElements.forEach(item => {\n      observer.observe(item);\n    });\n  }\n};","map":{"version":3,"names":["axios","name","data","form","phone","address","email","source","isLoading","formSuccess","methods","submitForm","upperCaseForm","toUpperCase","response","post","status","setTimeout","window","scrollTo","location","reload","alert","error","console","showSuccessMessage","$refs","successMessage","classList","add","validatePhone","replace","slice","validateName","pattern","test","resetForm","mounted","contactElements","contactSection","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","remove","item","observe"],"sources":["C:\\Users\\DIVDOC-INTERNET\\Desktop\\real-academy\\real-academy-frontend\\src\\components\\ContactForm.vue"],"sourcesContent":["<template>\r\n  <section class=\"contact-form\" id=\"contact\" ref=\"contactSection\">\r\n    <h2>Contáctanos</h2>\r\n    \r\n    <!-- Mostrar formulario si no está cargando ni enviado con éxito -->\r\n    <form v-if=\"!isLoading && !formSuccess\" @submit.prevent=\"submitForm\">\r\n      <input \r\n        type=\"text\" \r\n        v-model=\"form.name\" \r\n        placeholder=\"Nombre\" \r\n        required \r\n        @input=\"validateName\" \r\n        ref=\"formInputs\"\r\n      />\r\n      <input \r\n        type=\"tel\" \r\n        v-model=\"form.phone\" \r\n        placeholder=\"Teléfono\" \r\n        required \r\n        pattern=\"[0-9]*\" \r\n        maxlength=\"9\" \r\n        @input=\"validatePhone\" \r\n        ref=\"formInputs\"\r\n      />\r\n      <input \r\n        type=\"text\" \r\n        v-model=\"form.address\" \r\n        placeholder=\"Dirección\" \r\n        required \r\n        ref=\"formInputs\"\r\n      />\r\n      <input \r\n        type=\"email\" \r\n        v-model=\"form.email\" \r\n        placeholder=\"Correo Electrónico\" \r\n        required \r\n        ref=\"formInputs\"\r\n      />\r\n      <select v-model=\"form.source\" required ref=\"formInputs\">\r\n        <option disabled value=\"\">¿Cómo conociste la academia?</option>\r\n        <option value=\"social\">Redes Sociales</option>\r\n        <option value=\"recommendation\">Recomendación</option>\r\n        <option value=\"other\">Otros</option>\r\n      </select>\r\n      <!-- Añadido ref para el botón -->\r\n      <button type=\"submit\" ref=\"formButton\" class=\"form-button\">Enviar</button>\r\n    </form>\r\n\r\n    <!-- Componente de loading mientras se envía el formulario -->\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <div class=\"loading-logo\">\r\n        <img src=\"/real-academy-fc/logo-en-blanco.png\" alt=\"Logo de la Academia\" class=\"loading-blink\"/>\r\n      </div>\r\n      <p>Estamos cargando tu solicitud...</p>\r\n      <div class=\"loading-bar\">\r\n        <div class=\"loading-progress\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Mostrar mensaje de éxito si el formulario se envió correctamente -->\r\n    <div v-if=\"formSuccess\" class=\"success-message visible\"> <!-- Agrega la clase visible -->\r\n      <img src=\"/real-academy-fc/logo-en-blanco.png\" alt=\"Logo de la Academia\" />\r\n      <h2>¡Formulario Enviado!</h2>\r\n      <p>Gracias por contactarnos. Nos pondremos en contacto contigo pronto.</p>\r\n      <p>A continuación, serás redirigido a la página de inicio.</p>\r\n      <p>Redireccionando...</p>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ContactForm',\r\n  data() {\r\n    return {\r\n      form: {\r\n        name: '',\r\n        phone: '',\r\n        address: '',\r\n        email: '',\r\n        source: ''\r\n      },\r\n      isLoading: false,  // Estado de loading\r\n      formSuccess: false, // Estado para saber si el formulario fue enviado con éxito\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n  try {\r\n    this.isLoading = true;  // Mostrar el componente de loading\r\n\r\n    // Convertir los datos del formulario a mayúsculas\r\n    const upperCaseForm = {\r\n      name: this.form.name.toUpperCase(),\r\n      phone: this.form.phone,\r\n      address: this.form.address.toUpperCase(),\r\n      email: this.form.email,\r\n      source: this.form.source.toUpperCase(),\r\n    };\r\n\r\n    const response = await axios.post('http://localhost:3000/api/contact', upperCaseForm);\r\n\r\n    // Si el servidor responde con éxito, mostrar el mensaje de éxito\r\n    if (response.status === 201) {\r\n      setTimeout(() => {\r\n        this.isLoading = false; // Ocultar el componente de loading\r\n        this.formSuccess = true; // Mostrar mensaje de éxito\r\n        // Redirigir a la página de inicio después de unos segundos\r\n        setTimeout(() => {\r\n          window.scrollTo(0,0);\r\n          location.reload(); // Recargar la misma página\r\n        }, 3000);  // Esperar 3 segundos para mostrar el mensaje de éxito\r\n      }, 2000);  // Tiempo de simulación del loading\r\n    } else {\r\n      alert('Hubo un problema al enviar el formulario, intenta nuevamente.');\r\n      this.isLoading = false;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error al enviar el formulario:', error);\r\n    alert('Hubo un error al enviar el formulario. Por favor, revisa los datos e intenta de nuevo.');\r\n    this.isLoading = false;\r\n  }\r\n},\r\nshowSuccessMessage() {\r\n  setTimeout(() => {\r\n    this.$refs.successMessage.classList.add('visible'); // Agrega la clase visible para animación\r\n  }, 100); // Espera 100ms antes de añadir la clase visible\r\n},\r\n    validatePhone() {\r\n      // Asegúrate de que solo se ingresen números y que no exceda 9 dígitos\r\n      this.form.phone = this.form.phone.replace(/[^0-9]/g, '').slice(0, 9);\r\n    },\r\n    validateName() {\r\n      // Validar que el nombre no contenga solo caracteres repetidos o inapropiados\r\n      const pattern = /^(?!.*(.)\\1{2,})[a-zA-Z\\s]*$/; // No más de dos caracteres repetidos\r\n      if (!pattern.test(this.form.name)) {\r\n        alert('Por favor, ingresa un nombre válido. Evita usar caracteres repetidos o inapropiados.');\r\n        this.form.name = ''; // Limpia el campo\r\n      }\r\n    },\r\n    resetForm() {\r\n      // Restablecer el formulario después del éxito\r\n      this.form.name = '';\r\n      this.form.phone = '';\r\n      this.form.address = '';\r\n      this.form.email = '';\r\n      this.form.source = '';\r\n      this.formSuccess = false;\r\n      this.isLoading = false;\r\n    }\r\n  },\r\n  mounted() {\r\n  // Obtener todos los elementos de entrada y el botón en la sección de contacto\r\n  const contactElements = this.$refs.contactSection.querySelectorAll('input, select, button, .success-message');\r\n\r\n  // Configuración del IntersectionObserver para activar las animaciones\r\n  const observer = new IntersectionObserver((entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        entry.target.classList.add('visible'); // Añade clase visible cuando está en pantalla\r\n      } else {\r\n        entry.target.classList.remove('visible'); // Elimina clase cuando sale de pantalla\r\n      }\r\n    });\r\n  });\r\n\r\n  // Observar cada elemento de entrada y el botón\r\n  contactElements.forEach((item) => {\r\n    observer.observe(item);\r\n  });\r\n},\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.contact-form {\r\n  padding: 60px 30px;\r\n  background-color: #000;\r\n  color: white;\r\n  text-align: center;\r\n}\r\n\r\nh2 {\r\n  color: #FF007F;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n/* Animación para elementos visibles */\r\ninput,\r\nselect,\r\nbutton, /* Añadido el botón aquí */\r\n.success-message {\r\n  opacity: 0; /* Oculto inicialmente */\r\n  transform: translateY(20px); /* Desplazado inicialmente hacia abajo */\r\n  transition: opacity 0.6s ease-out, transform 0.6s ease-out; /* Transición para opacidad y movimiento */\r\n}\r\n\r\n/* Clase visible para aplicar la animación */\r\ninput.visible,\r\nselect.visible,\r\nbutton.visible, /* Clase visible para el botón */\r\n.success-message.visible {\r\n  opacity: 1; /* Aparece */\r\n  transform: translateY(0); /* Posición original */\r\n}\r\n\r\nform {\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-button {\r\n  opacity: 0; /* Oculto inicialmente */\r\n  transform: translateY(20px); /* Desplazado inicialmente hacia abajo */\r\n  transition: opacity 0.6s ease-out, transform 0.6s ease-out; /* Transición para opacidad y movimiento */\r\n}\r\n\r\n.form-button.visible {\r\n  opacity: 1; /* Aparece */\r\n  transform: translateY(0); /* Posición original */\r\n}\r\n\r\ninput,\r\nselect {\r\n  font-family: 'Bebas Neue', sans-serif;\r\n  margin-bottom: 15px;\r\n  padding: 10px;\r\n  border: 1px solid #FF007F;\r\n  border-radius: 5px;\r\n  background-color: black;\r\n  color: white;\r\n}\r\n\r\nbutton {\r\n  padding: 10px;\r\n  font-family: 'Bebas Neue', sans-serif;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #FF007F;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #e6006f;\r\n}\r\n\r\n/* Estilos para el loading */\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: white;\r\n}\r\n\r\n.loading-logo img {\r\n  width: 100px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.loading-blink {\r\n  animation: blink 1.5s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n  0%, 100% { opacity: 1; }\r\n  50% { opacity: 0; }\r\n}\r\n\r\n.loading-bar {\r\n  width: 80%;\r\n  background-color: black;\r\n  border-radius: 5px;\r\n  border: 1px solid white;\r\n  margin-top: 20px;\r\n}\r\n\r\n.loading-progress {\r\n  width: 0;\r\n  height: 15px;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  animation: loadBar 2s forwards;\r\n}\r\n\r\n@keyframes loadBar {\r\n  0% { width: 0; }\r\n  100% { width: 100%; }\r\n}\r\n\r\n.success-message {\r\n  text-align: center;\r\n}\r\n\r\n.success-message img {\r\n  max-width: 200px;\r\n}\r\n\r\n.success-message h2 {\r\n  margin-top: 20px;\r\n  color: #FF007F;\r\n}\r\n\r\n.success-message p {\r\n  margin: 20px 0;\r\n  color: #fff;\r\n}\r\n\r\n.success-message {\r\n  opacity: 0; /* Oculto inicialmente */\r\n  transform: translateY(20px); /* Desplazado inicialmente hacia abajo */\r\n  transition: opacity 0.6s ease-out, transform 0.6s ease-out; /* Transición para opacidad y movimiento */\r\n}\r\n\r\n.success-message.visible {\r\n  opacity: 1; /* Aparece */\r\n  transform: translateY(0); /* Posición original */\r\n}\r\n  \r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}