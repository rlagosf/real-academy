{"ast":null,"code":"import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    onClick: _cache[0] || (_cache[0] = () => {\n      console.log('sdfsd');\n    })\n  }, [_renderSlot(_ctx.$slots, \"default\")]);\n}","map":{"version":3,"names":["_createElementBlock","onClick","_cache","console","log","_renderSlot","_ctx","$slots"],"sources":["C:\\Users\\DIVDOC-INTERNET\\Desktop\\real-academy\\real-academy-frontend\\node_modules\\@fawmi\\vue-google-maps\\src\\components\\marker.vue"],"sourcesContent":["<template>\r\n  <div @click=\"()=> {console.log('sdfsd')}\">\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport buildComponent from './build-component.js'\r\n\r\nconst props = {\r\n  animation: {\r\n    twoWay: true,\r\n    type: Number,\r\n  },\r\n  attribution: {\r\n    type: Object,\r\n  },\r\n  clickable: {\r\n    type: Boolean,\r\n    twoWay: true,\r\n    default: true,\r\n  },\r\n  cursor: {\r\n    type: String,\r\n    twoWay: true,\r\n  },\r\n  draggable: {\r\n    type: Boolean,\r\n    twoWay: true,\r\n    default: false,\r\n  },\r\n  icon: {\r\n    twoWay: true,\r\n  },\r\n  label: {},\r\n  opacity: {\r\n    type: Number,\r\n    default: 1,\r\n  },\r\n  options: {\r\n    type: Object,\r\n  },\r\n  place: {\r\n    type: Object,\r\n  },\r\n  position: {\r\n    type: Object,\r\n    twoWay: true,\r\n  },\r\n  shape: {\r\n    type: Object,\r\n    twoWay: true,\r\n  },\r\n  title: {\r\n    type: String,\r\n    twoWay: true,\r\n  },\r\n  zIndex: {\r\n    type: Number,\r\n    twoWay: true,\r\n  },\r\n  visible: {\r\n    twoWay: true,\r\n    default: true,\r\n  },\r\n}\r\n\r\nconst events = [\r\n  'click',\r\n  'rightclick',\r\n  'dblclick',\r\n  'drag',\r\n  'dragstart',\r\n  'dragend',\r\n  'mouseup',\r\n  'mousedown',\r\n  'mouseover',\r\n  'mouseout',\r\n]\r\n\r\nexport default buildComponent({\r\n  mappedProps: props,\r\n  events,\r\n  name: 'marker',\r\n  ctr: () => google.maps.Marker,\r\n\r\n  inject: {\r\n    $clusterPromise: {\r\n      default: null,\r\n    },\r\n  },\r\n  emits: events,\r\n  unmounted() {\r\n    if (!this.$markerObject) {\r\n      return\r\n    }\r\n\r\n    if (this.$clusterObject) {\r\n      // Repaint will be performed in `updated()` of cluster\r\n      this.$clusterObject.removeMarker(this.$markerObject, true)\r\n    } else {\r\n      this.$markerObject.setMap(null)\r\n    }\r\n  },\r\n\r\n  beforeCreate(options) {\r\n    if (this.$clusterPromise) {\r\n      options.map = null\r\n    }\r\n\r\n    return this.$clusterPromise\r\n  },\r\n\r\n  afterCreate(inst) {\r\n    events.forEach((event)=> {\r\n      inst.addListener(event, (payload)=> {\r\n        this.$emit(event, payload)\r\n      });\r\n    })\r\n    if (this.$clusterPromise) {\r\n      this.$clusterPromise.then((co) => {\r\n        this.$clusterObject = co\r\n        co.addMarker(inst)\r\n      })\r\n    }\r\n  },\r\n})\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAEM;IAFAC,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAQC,OAAO,CAACC,GAAG;IAAA;MAC5BC,WAAA,CAAaC,IAAA,CAAAC,MAAA,a","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}