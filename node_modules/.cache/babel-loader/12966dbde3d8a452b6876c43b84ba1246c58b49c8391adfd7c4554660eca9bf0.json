{"ast":null,"code":"import { ref, onMounted } from 'vue';\nexport default {\n  name: 'PhotoGallery',\n  setup() {\n    const imageUrls = ref([]); // Aquí se almacenarán las URLs de las imágenes\n    const modalVisible = ref(false); // Controla la visibilidad del modal\n    const modalImage = ref(null); // Almacena la URL de la imagen que se muestra en el modal\n\n    const fetchImageUrls = async () => {\n      const totalImages = 42; // Cambia este número según el total de imágenes que tengas\n      const urls = Array.from({\n        length: totalImages\n      }, (_, i) => `/assets/images/foto-real-facup-${i + 1}.webp`);\n      return urls; // Retorna el array de URLs\n    };\n    const openModal = imageUrl => {\n      modalImage.value = imageUrl; // Asigna la URL de la imagen al modal\n      modalVisible.value = true; // Muestra el modal\n      document.body.style.overflow = 'hidden'; // Desactiva el scroll del sitio web\n    };\n    const closeModal = () => {\n      modalVisible.value = false; // Oculta el modal\n      modalImage.value = null; // Limpia la imagen del modal\n      document.body.style.overflow = ''; // Reactiva el scroll del sitio web\n    };\n    onMounted(async () => {\n      try {\n        imageUrls.value = await fetchImageUrls();\n        if (!imageUrls.value.length) {\n          throw new Error(\"No se encontraron imágenes.\");\n        }\n      } catch (error) {\n        console.error(\"Error al cargar las imágenes:\", error);\n      }\n    });\n    return {\n      imageUrls,\n      modalVisible,\n      modalImage,\n      openModal,\n      closeModal\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","name","setup","imageUrls","modalVisible","modalImage","fetchImageUrls","totalImages","urls","Array","from","length","_","i","openModal","imageUrl","value","document","body","style","overflow","closeModal","Error","error","console"],"sources":["C:\\Users\\DIVDOC-INTERNET\\Desktop\\real-academy\\real-academy-frontend\\src\\components\\PhotoGallery.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\" id=\"gallery\">\r\n    <div class=\"slider\">\r\n      <div class=\"slide-track\">\r\n        <div\r\n          class=\"slide\"\r\n          v-for=\"(image, index) in imageUrls.concat(imageUrls)\"\r\n          :key=\"'first-' + index\"\r\n        >\r\n          <img \r\n            :src=\"image\" \r\n            @click=\"openModal(image)\" \r\n            alt=\"\" \r\n            loading=\"lazy\" \r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"modalVisible\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content fade-in\" @click.stop>\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n        <img :src=\"modalImage\" alt=\"\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\n\r\nexport default {\r\n  name: 'PhotoGallery',\r\n  setup() {\r\n    const imageUrls = ref([]); // Aquí se almacenarán las URLs de las imágenes\r\n    const modalVisible = ref(false); // Controla la visibilidad del modal\r\n    const modalImage = ref(null); // Almacena la URL de la imagen que se muestra en el modal\r\n\r\n    const fetchImageUrls = async () => {\r\n      const totalImages = 42; // Cambia este número según el total de imágenes que tengas\r\n      const urls = Array.from({ length: totalImages }, (_, i) =>\r\n        `/assets/images/foto-real-facup-${i + 1}.webp`\r\n      );\r\n      return urls; // Retorna el array de URLs\r\n    };\r\n\r\n    const openModal = (imageUrl) => {\r\n      modalImage.value = imageUrl; // Asigna la URL de la imagen al modal\r\n      modalVisible.value = true; // Muestra el modal\r\n      document.body.style.overflow = 'hidden'; // Desactiva el scroll del sitio web\r\n    };\r\n\r\n    const closeModal = () => {\r\n      modalVisible.value = false; // Oculta el modal\r\n      modalImage.value = null; // Limpia la imagen del modal\r\n      document.body.style.overflow = ''; // Reactiva el scroll del sitio web\r\n    };\r\n\r\n    onMounted(async () => {\r\n      try {\r\n        imageUrls.value = await fetchImageUrls();\r\n        if (!imageUrls.value.length) {\r\n          throw new Error(\"No se encontraron imágenes.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al cargar las imágenes:\", error);\r\n      }\r\n    });\r\n\r\n    return {\r\n      imageUrls,\r\n      modalVisible,\r\n      modalImage,\r\n      openModal,\r\n      closeModal,\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\n.container {\r\n  position: relative;\r\n}\r\n\r\n@keyframes scroll {\r\n  0% { transform: translateX(0); }\r\n  100% { transform: translateX(calc(-400px * 50)); }\r\n}\r\n\r\n.slider {\r\n  background: black;\r\n  height: 500px;\r\n  margin: auto;\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: 100vw;\r\n}\r\n\r\n.slide-track {\r\n  display: flex;\r\n  width: calc(300px * 100);\r\n  animation: scroll 80s linear infinite;\r\n}\r\n\r\n.slide img {\r\n  height: 350px;\r\n  width: 350px;\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n  margin: 20px;\r\n  border-radius: 45px;\r\n  object-fit: cover;\r\n  position: relative;\r\n  top: 100px;\r\n}\r\n\r\n.slide img:hover {\r\n  transform: scale(1.1);\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  opacity: 0;\r\n  animation: fadeIn 0.5s forwards;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 20px;\r\n  font-size: 24px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.close:hover {\r\n  transform: scale(1.2);\r\n}\r\n\r\n.modal-content img {\r\n  max-width: 90vw;\r\n  max-height: 90vh;\r\n  border-radius: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AA4BA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAEpC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIJ,GAAG,CAAC,EAAE,CAAC,EAAE;IAC3B,MAAMK,YAAW,GAAIL,GAAG,CAAC,KAAK,CAAC,EAAE;IACjC,MAAMM,UAAS,GAAIN,GAAG,CAAC,IAAI,CAAC,EAAE;;IAE9B,MAAMO,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,MAAMC,WAAU,GAAI,EAAE,EAAE;MACxB,MAAMC,IAAG,GAAIC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEJ;MAAY,CAAC,EAAE,CAACK,CAAC,EAAEC,CAAC,KACpD,kCAAkCA,CAAA,GAAI,CAAC,OACzC,CAAC;MACD,OAAOL,IAAI,EAAE;IACf,CAAC;IAED,MAAMM,SAAQ,GAAKC,QAAQ,IAAK;MAC9BV,UAAU,CAACW,KAAI,GAAID,QAAQ,EAAE;MAC7BX,YAAY,CAACY,KAAI,GAAI,IAAI,EAAE;MAC3BC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,QAAQ,EAAE;IAC3C,CAAC;IAED,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACvBjB,YAAY,CAACY,KAAI,GAAI,KAAK,EAAE;MAC5BX,UAAU,CAACW,KAAI,GAAI,IAAI,EAAE;MACzBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,EAAE,EAAE;IACrC,CAAC;IAEDpB,SAAS,CAAC,YAAY;MACpB,IAAI;QACFG,SAAS,CAACa,KAAI,GAAI,MAAMV,cAAc,CAAC,CAAC;QACxC,IAAI,CAACH,SAAS,CAACa,KAAK,CAACL,MAAM,EAAE;UAC3B,MAAM,IAAIW,KAAK,CAAC,6BAA6B,CAAC;QAChD;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC,CAAC;IAEF,OAAO;MACLpB,SAAS;MACTC,YAAY;MACZC,UAAU;MACVS,SAAS;MACTO;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}