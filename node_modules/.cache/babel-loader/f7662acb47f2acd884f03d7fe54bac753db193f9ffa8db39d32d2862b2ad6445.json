{"ast":null,"code":"export default {\n  name: 'PhotoGallery',\n  data() {\n    return {\n      imageUrls: [],\n      // Aquí se almacenarán las URLs de las imágenes\n      modalVisible: false,\n      // Controla la visibilidad del modal\n      modalImage: null // Almacena la URL de la imagen que se muestra en el modal\n    };\n  },\n  async created() {\n    try {\n      // Aquí debes obtener las URLs de las imágenes, por ejemplo, desde una API\n      this.imageUrls = await this.fetchImageUrls(); // Llama a la función para obtener las URLs\n      if (!this.imageUrls.length) {\n        throw new Error(\"No se encontraron imágenes.\");\n      }\n    } catch (error) {\n      console.error(\"Error al cargar las imágenes:\", error);\n    }\n  },\n  methods: {\n    async fetchImageUrls() {\n      // Implementa la lógica para obtener las URLs de las imágenes\n      const totalImages = 50; // Cambia este número según el total de imágenes que tengas\n      const urls = Array.from({\n        length: totalImages\n      }, (_, i) => `/real-academy-fc/fotos-real/foto-real-facup-${i + 1}.jpeg` // Asegúrate de que la URL sea correcta para todas las imágenes\n      );\n      return urls; // Retorna el array de URLs\n    },\n    openModal(imageUrl) {\n      this.modalImage = imageUrl; // Asigna la URL de la imagen al modal\n      this.modalVisible = true; // Muestra el modal\n      document.body.style.overflow = 'hidden'; // Desactiva el scroll del sitio web\n    },\n    closeModal() {\n      this.modalVisible = false; // Oculta el modal\n      this.modalImage = null; // Limpia la imagen del modal\n      document.body.style.overflow = ''; // Reactiva el scroll del sitio web\n    }\n  }\n};","map":{"version":3,"names":["name","data","imageUrls","modalVisible","modalImage","created","fetchImageUrls","length","Error","error","console","methods","totalImages","urls","Array","from","_","i","openModal","imageUrl","document","body","style","overflow","closeModal"],"sources":["C:\\Users\\DIVDOC-INTERNET\\Desktop\\real-academy\\real-academy-frontend\\src\\components\\PhotoGallery.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\" id=\"gallery\">\r\n    <div class=\"slider\">\r\n      <div class=\"slide-track\">\r\n        <div\r\n          class=\"slide\"\r\n          v-for=\"(image, index) in imageUrls.concat(imageUrls)\"\r\n          :key=\"'first-' + index\"\r\n        >\r\n          <img :src=\"image\" @click=\"openModal(image)\" alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"modalVisible\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content fade-in\" @click.stop>\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n        <img :src=\"modalImage\" alt=\"\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PhotoGallery',\r\n  data() {\r\n    return {\r\n      imageUrls: [], // Aquí se almacenarán las URLs de las imágenes\r\n      modalVisible: false, // Controla la visibilidad del modal\r\n      modalImage: null // Almacena la URL de la imagen que se muestra en el modal\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // Aquí debes obtener las URLs de las imágenes, por ejemplo, desde una API\r\n      this.imageUrls = await this.fetchImageUrls(); // Llama a la función para obtener las URLs\r\n      if (!this.imageUrls.length) {\r\n        throw new Error(\"No se encontraron imágenes.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al cargar las imágenes:\", error);\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchImageUrls() {\r\n      // Implementa la lógica para obtener las URLs de las imágenes\r\n      const totalImages = 50; // Cambia este número según el total de imágenes que tengas\r\n      const urls = Array.from({ length: totalImages }, (_, i) =>\r\n        `/real-academy-fc/fotos-real/foto-real-facup-${i + 1}.jpeg` // Asegúrate de que la URL sea correcta para todas las imágenes\r\n      );\r\n      return urls; // Retorna el array de URLs\r\n    },\r\n    openModal(imageUrl) {\r\n      this.modalImage = imageUrl; // Asigna la URL de la imagen al modal\r\n      this.modalVisible = true; // Muestra el modal\r\n      document.body.style.overflow = 'hidden'; // Desactiva el scroll del sitio web\r\n    },\r\n    closeModal() {\r\n      this.modalVisible = false; // Oculta el modal\r\n      this.modalImage = null; // Limpia la imagen del modal\r\n      document.body.style.overflow = ''; // Reactiva el scroll del sitio web\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  margin: 0; /* Elimina el margen del body para que el carrusel pueda ocupar todo el ancho */\r\n}\r\n\r\n.container {\r\n  position: relative; /* Establece un contexto para los elementos hijos */\r\n}\r\n\r\n@keyframes scroll {\r\n  0% { transform: translateX(0); }\r\n  100% { transform: translateX(calc(-400px * 50)); } /* Ajusta según la cantidad de imágenes */\r\n}\r\n\r\n.slider {\r\n  background: black; /* Cambia el fondo del carrusel a negro para un efecto flotante */\r\n  height: 500px; /* Ajusta la altura del carrusel según el tamaño de las imágenes */\r\n  margin: auto; /* Centra el carrusel */\r\n  overflow: hidden; /* Oculta el contenido que desborda el contenedor */\r\n  position: relative; /* Permite la posición absoluta de los hijos */\r\n  width: 100vw; /* Abarca todo el ancho del viewport */\r\n}\r\n\r\n.slide-track {\r\n  animation: scroll 80s linear infinite; /* Animación que hace que el carrusel se desplace de forma continua */\r\n  display: flex; /* Utiliza flexbox para alinear las imágenes en fila */\r\n  width: calc(300px * 100); /* Ajusta el ancho total de la pista del carrusel */\r\n}\r\n\r\n.slide img {\r\n  height: 350px; /* Ajusta la altura de las imágenes */\r\n  width: 350px; /* Ajusta el ancho de las imágenes para que sean cuadradas */\r\n  cursor: pointer; /* Cambia el cursor para indicar que es clicable */\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease; /* Transición suave para el zoom y el borde */\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2); /* Borde difuminado entre las imágenes */\r\n  margin: 20px; /* Separación horizontal entre las imágenes */\r\n  border-radius: 50%; /* Hace que las imágenes sean completamente redondas */\r\n  object-fit: cover; /* Ajusta la imagen dentro del contenedor circular sin perder proporción */\r\n  position: relative; /* Posicionamiento relativo para ajustar el vertical */\r\n  top: 100px; /* Baja las imágenes un poco más para centrar visualmente */\r\n}\r\n\r\n.slide img:hover {\r\n  transform: scale(1.1); /* Aumenta el tamaño de la imagen al pasar el puntero */\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3); /* Aumenta el efecto de sombra al hacer hover */\r\n}\r\n\r\n/* Estilos del modal */\r\n.modal-overlay {\r\n  position: fixed; /* Fija el modal a la ventana */\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.8); /* Fondo oscuro con opacidad para el modal */\r\n  display: flex; /* Utiliza flexbox para centrar el contenido del modal */\r\n  align-items: center; /* Alinea verticalmente al centro */\r\n  justify-content: center; /* Alinea horizontalmente al centro */\r\n  z-index: 1000; /* Asegura que el modal esté sobre todo el contenido */\r\n  opacity: 0; /* Inicialmente oculto */\r\n  animation: fadeIn 0.5s forwards; /* Añadir animación de entrada */\r\n}\r\n\r\n@keyframes fadeIn {\r\n  to {\r\n    opacity: 1; /* Se vuelve completamente visible */\r\n  }\r\n}\r\n\r\n.modal-content {\r\n  position: relative; /* Necesario para el botón de cerrar */\r\n}\r\n\r\n.close {\r\n  position: absolute; /* Colocar el botón en la esquina superior derecha */\r\n  top: 10px;\r\n  right: 20px;\r\n  font-size: 24px; /* Tamaño del icono de cerrar */\r\n  color: white; /* Color del icono de cerrar */\r\n  cursor: pointer; /* Cambiar cursor al pasar por encima */\r\n  transition: transform 0.3s ease; /* Transición suave para el efecto de zoom */\r\n}\r\n\r\n.close:hover {\r\n  transform: scale(1.2); /* Aumenta el tamaño del icono al pasar el puntero */\r\n}\r\n\r\n.modal-content img {\r\n  max-width: 90vw; /* Limita el tamaño máximo de la imagen en el modal */\r\n  max-height: 90vh; /* Limita la altura máxima de la imagen en el modal */\r\n  border-radius: 20px; /* Agrega un borde redondeado a la imagen del modal */\r\n}\r\n</style>\r\n"],"mappings":"AAuBA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MAAE;MACfC,YAAY,EAAE,KAAK;MAAE;MACrBC,UAAU,EAAE,IAAG,CAAE;IACnB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF;MACA,IAAI,CAACH,SAAQ,GAAI,MAAM,IAAI,CAACI,cAAc,CAAC,CAAC,EAAE;MAC9C,IAAI,CAAC,IAAI,CAACJ,SAAS,CAACK,MAAM,EAAE;QAC1B,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;IACF,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAML,cAAcA,CAAA,EAAG;MACrB;MACA,MAAMM,WAAU,GAAI,EAAE,EAAE;MACxB,MAAMC,IAAG,GAAIC,KAAK,CAACC,IAAI,CAAC;QAAER,MAAM,EAAEK;MAAY,CAAC,EAAE,CAACI,CAAC,EAAEC,CAAC,KACpD,+CAA+CA,CAAA,GAAI,CAAC,OAAM,CAAE;MAC9D,CAAC;MACD,OAAOJ,IAAI,EAAE;IACf,CAAC;IACDK,SAASA,CAACC,QAAQ,EAAE;MAClB,IAAI,CAACf,UAAS,GAAIe,QAAQ,EAAE;MAC5B,IAAI,CAAChB,YAAW,GAAI,IAAI,EAAE;MAC1BiB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,QAAQ,EAAE;IAC3C,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACrB,YAAW,GAAI,KAAK,EAAE;MAC3B,IAAI,CAACC,UAAS,GAAI,IAAI,EAAE;MACxBgB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,EAAE,EAAE;IACrC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}